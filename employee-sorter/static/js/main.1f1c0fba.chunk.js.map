{"version":3,"sources":["components/schedule/ShiftHourPicker.tsx","components/input-section/InputSection.tsx","components/schedule/Grid.tsx","components/schedule/Schedule.tsx","util/util.ts","components/App.tsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","minWidth","selectEmpty","marginTop","spacing","ShiftHourPicker","props","classes","FormControl","className","InputLabel","label","Select","value","hour","onChange","event","onHourUpdate","target","Array","from","keys","map","_d","i","MenuItem","key","newHour","getHourString","EmployeeRow","styled","margin","display","alignItems","NoEmployees","NewEmployeeRow","flexDirection","NamesWrapper","padding","maxHeight","flex","flexWrap","lineHeight","Label","marginRight","justifyContent","SmallBtn","Button","fontSize","ClearBtn","marginLeft","ActionsGroup","paddingRight","Header","TimeWrapper","RemoveEmployee","cursor","InputSection","addEmploye","employes","removeEmployee","useState","newName","updateName","useTheme","matches","useMediaQuery","breakpoints","up","inputEl","useRef","shiftStartHour","updateShiftStartHour","length","d","name","index","onRemove","DeleteForever","onClick","Input","ref","id","aria-describedby","e","currentTarget","IconButton","split","forEach","setTimeout","current","focus","AddCircle","variant","color","size","generateGrid","clearList","gridContainer","gridRow","gridItem","minHeight","borderRadius","border","palette","grey","labels","itemLabel","typography","subtitle2","fontWeight","fontWeightLight","Grid","grid","row","item","itemIndex","startTime","endTime","names","nameIndex","heading","shiftStart","container","Schedule","employeeShiftGrid","shuffleArray","arr","array","j","Math","floor","random","temp","incrementHour","forHours","hourToString","generateScheduleGrid","startHour","employees","shiftStartTime","employeeList","list","newList","listLenght","missingInputs","lastUpdate","push","unshift","fillList","n","shuffleArrayTimes","workHours","newEndTime","hourString","baseIndex","root","flexGrow","background","A700","header","default","A400","paper","headingText","headingExplanation","width","App","updateEmployes","updateShiftGrid","Container","justify","xs","md","Paper","emp","newGrid","newEmployees","splice","Boolean","window","location","hostname","match","console","log","process","ReactGA","initialize","debug","pageview","pathname","search","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1f1c0fba.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tminWidth: '75px',\n\t},\n\tselectEmpty: {\n\t\tmarginTop: theme.spacing(2),\n\t},\n}));\n\ninterface ShiftHourPickerProps {\n\tlabel: string;\n\thour: number;\n\tonHourUpdate: (hour: number) => void;\n}\n\nfunction getHourString(hour: number) {\n\tconst newHour = hour < 10 ? `0${hour}` : hour;\n\treturn `${newHour}h`;\n}\n\nexport function ShiftHourPicker(props: ShiftHourPickerProps) {\n\tconst classes = useStyles();\n\tconst onHourChange = (event: ChangeEvent<{ name?: string; value: unknown }>) => {\n\t\tprops.onHourUpdate(event.target.value as number);\n\t};\n\n\treturn (\n\t\t<FormControl className={classes.formControl}>\n\t\t\t<InputLabel>{props.label}</InputLabel>\n\t\t\t<Select\n\t\t\t\tvalue={props.hour}\n\t\t\t\tonChange={onHourChange}\n\t\t\t>\n\t\t\t\t{Array.from(Array(24).keys()).map((_d, i) => (\n\t\t\t\t\t<MenuItem key={i} value={i}>{getHourString(i)}</MenuItem>\n\t\t\t\t))}\n\t\t\t</Select>\n\t\t</FormControl>\n\t);\n}\n","import React, { ChangeEvent, Fragment, useRef, useState } from 'react';\nimport { Input, IconButton, styled, InputLabel, Button } from '@material-ui/core';\nimport { AddCircle, DeleteForever } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ShiftHourPicker } from '../schedule/ShiftHourPicker';\n\nconst EmployeeRow = styled('div')({\n\tmargin: '4px 0',\n\tdisplay: 'flex',\n\talignItems: 'center',\n});\n\nconst NoEmployees = styled('div')({\n\tmargin: '12px 0 8px 0'\n});\n\nconst NewEmployeeRow = styled('div')({\n\tdisplay: 'flex',\n\tflexDirection: 'row',\n\talignItems: 'center',\n});\n\nconst NamesWrapper = styled('div')({\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\tpadding: '4px',\n\tmaxHeight: '200px',\n\tflex: 1,\n\tflexWrap: 'wrap',\n\tlineHeight: '0.8em'\n});\n\nconst Label = styled(InputLabel)({\n\talignItems: 'center',\n\tdisplay: 'flex',\n\tmarginRight: '4px',\n\tjustifyContent: 'flex-start',\n});\n\nconst SmallBtn = styled(Button)({\n\tfontSize: '0.68em',\n\tmaxHeight: '32px',\n});\n\nconst ClearBtn = styled(SmallBtn)({\n\tmarginLeft: '4px',\n});\n\nconst ActionsGroup = styled('div')({\n\tmargin: '8px 0',\n\tjustifyContent: 'flex-end',\n\tdisplay: 'flex',\n\tpaddingRight: '8px'\n});\n\nconst Header = styled('div')({\n\tdisplay: 'flex',\n\tflexDirection: 'row',\n\talignItems: 'center',\n\tjustifyContent: 'space-between',\n});\n\nconst TimeWrapper = styled('div')({\n\tdisplay: 'flex',\n\tflexDirection: 'row',\n\tpadding: '8px',\n\talignItems: 'center'\n});\n\nconst RemoveEmployee = styled('span')({\n\tmarginLeft: '8px',\n\tcursor: 'pointer',\n});\n\nfunction renderName(name: string, index: number, onRemove: () => void) {\n\treturn (\n\t\t<EmployeeRow key={index}>{name} <RemoveEmployee><DeleteForever fontSize=\"small\" onClick={onRemove}/></RemoveEmployee></EmployeeRow>\n\t);\n}\n\nfunction renderNoEmployees() {\n\treturn (\n\t\t<NoEmployees>\n\t\t\t<Label>There are no Employees.</Label>\n\t\t</NoEmployees>\n\t);\n}\n\ninterface InputSectionProps {\n\temployes: string[];\n\taddEmploye: (employee: string) => void;\n\tgenerateGrid: () => void;\n\tclearList: () => void;\n\tupdateShiftStartHour: (hour: number) => void;\n\tshiftStartHour: number;\n\tremoveEmployee: (index: number) => void;\n}\n\nexport function InputSection(props: InputSectionProps) {\n\tconst {addEmploye, employes, removeEmployee } = props;\n\tconst [newName, updateName] = useState<string>('');\n\tconst theme = useTheme();\n\tconst matches = useMediaQuery(theme.breakpoints.up('md'));\n\tconst inputEl = useRef<HTMLInputElement>(null);\n\n\tconst addNewName = () => {\n\t\tconst names = newName.length > 0 ? newName.split(',') : [];\n\t\tnames.forEach((name) => name && name.length > 0 ? addEmploye(name) : '');\n\t\tupdateName('');\n\t\tsetTimeout(() => {\n\t\t\tconst node = inputEl.current as HTMLInputElement;\n\t\t\tnode.focus();\n\t\t}, 50);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Header>\n\t\t\t\t<h3>Employee List: </h3>\n\t\t\t\t<TimeWrapper>\n\t\t\t\t\t<ShiftHourPicker\n\t\t\t\t\t\tlabel={'Shift start'}\n\t\t\t\t\t\thour={props.shiftStartHour}\n\t\t\t\t\t\tonHourUpdate={props.updateShiftStartHour}\n\t\t\t\t\t/>\n\t\t\t\t</TimeWrapper>\n\t\t\t</Header>\n\t\t\t<NamesWrapper>\n\t\t\t\t{employes.length === 0 ? (\n\t\t\t\t\trenderNoEmployees()\n\t\t\t\t) : (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{employes.map((d, i) => renderName(d, i, () => removeEmployee(i)))}\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\t\t\t</NamesWrapper>\n\t\t\t<NewEmployeeRow>\n\t\t\t\t<Label>Add Employee: </Label>\n\t\t\t\t<Input ref={inputEl} id=\"name-input\" aria-describedby=\"name-input\"\n\t\t\t\t\t\t\t onChange={(e: ChangeEvent<HTMLInputElement>) => updateName(e.currentTarget.value)} value={newName}/>\n\t\t\t\t<IconButton onClick={addNewName}><AddCircle/></IconButton>\n\t\t\t\t{matches && (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<SmallBtn variant=\"outlined\" color=\"default\" size=\"small\" onClick={props.generateGrid}>\n\t\t\t\t\t\t\tGenerate\n\t\t\t\t\t\t</SmallBtn>\n\t\t\t\t\t\t<ClearBtn variant=\"outlined\" color=\"default\" size=\"small\" onClick={props.clearList}>\n\t\t\t\t\t\t\tclear\n\t\t\t\t\t\t</ClearBtn>\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\t\t\t</NewEmployeeRow>\n\t\t\t{!matches && (\n\t\t\t\t<ActionsGroup>\n\t\t\t\t\t<SmallBtn variant=\"outlined\" color=\"default\" size=\"small\" onClick={props.generateGrid}>\n\t\t\t\t\t\tGenerate\n\t\t\t\t\t</SmallBtn>\n\t\t\t\t\t<ClearBtn variant=\"outlined\" color=\"default\" size=\"small\" onClick={props.clearList}>\n\t\t\t\t\t\tclear\n\t\t\t\t\t</ClearBtn>\n\t\t\t\t</ActionsGroup>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\tgridContainer: {\n\t\tdisplay: 'flex',\n\t\tflex: 1,\n\t\tflexDirection: 'column',\n\t},\n\tgridRow: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t},\n\tgridItem: {\n\t\tdisplay: 'flex',\n\t\tflex: ' 1 50%',\n\t\tflexDirection: 'column',\n\t\tminHeight: '30px',\n\t\tborderRadius: `${theme.spacing(.5)}px`,\n\t\tborder: `1px solid ${theme.palette.grey['500']}`,\n\t\tmargin: `${theme.spacing(.5)}px`,\n\t\tpadding: `${theme.spacing(.5)}px`,\n\t},\n\tlabels: {\n\t\tflexDirection: 'row',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-between',\n\t},\n\titemLabel: {\n\t\t...theme.typography.subtitle2,\n\t\tfontWeight: theme.typography.fontWeightLight,\n\t},\n}));\n\nexport interface ScheduleGridRowItem {\n\tstartTime: string;\n\tendTime: string;\n\tnames: string[]\n}\n\nexport type ScheduleGridRow = ScheduleGridRowItem[];\nexport type ScheduleGrid = ScheduleGridRow[];\n\ninterface GridProps {\n\tgrid: ScheduleGrid;\n}\n\nexport function Grid(props: GridProps) {\n\tconst { grid } = props;\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.gridContainer}>\n\t\t\t{grid.map((row, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={index} className={classes.gridRow}>\n\t\t\t\t\t\t{row.map((item, itemIndex) => (\n\t\t\t\t\t\t\t<div key={itemIndex} className={classes.gridItem}>\n\t\t\t\t\t\t\t\t<div className={classes.labels}>\n\t\t\t\t\t\t\t\t\t<span className={classes.itemLabel}>Start time: {item.startTime}</span>\n\t\t\t\t\t\t\t\t\t<span className={classes.itemLabel}>End time: {item.endTime}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{item.names.map((name, nameIndex) => (\n\t\t\t\t\t\t\t\t\t<div key={nameIndex}>{name}</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n","import React  from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Grid, ScheduleGrid } from './Grid';\n\nconst useStyles = makeStyles((theme) => ({\n\theading: {\n\t\tpadding: `${theme.spacing(1)}px`\n\t},\n\tshiftStart: {\n\t\tmarginRight: theme.spacing(1),\n\t},\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t}\n}));\n\ninterface ScheduleProps {\n\temployeeShiftGrid: ScheduleGrid;\n}\n\nexport function Schedule(props: ScheduleProps) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<div className={classes.heading}>Schedule</div>\n\t\t\t<Grid grid={props.employeeShiftGrid}/>\n\t\t</div>\n\t);\n}\n","import { ScheduleGrid } from \"../components/schedule/Grid\";\n// Filip Jelic, Direktor Disic, Djidji djidjalone, Neca pereca, Mica Panika, Zika Rulet, Zoki burgija, Rodja Prangija, Pera Peric, Stefan Bozic, Pera Masic, Sale Ristovic, Testni Korisnik, Jedac Govana, Mica Pantela, Rodja Micic, Decko Tzar\nexport function shuffleArray(arr: any[]) {\n\tconst array = Array.from(arr);\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * i);\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n\n\treturn array;\n}\n\nexport function shuffleArrayTimes(arr: any[], n: number) {\n\tlet array = Array.from(arr);\n\n\twhile (n !== 0) {\n\t\tarray = shuffleArray(array);\n\t\tn--;\n\t}\n\n\treturn array;\n}\n\nexport function incrementHour(hour: number, forHours: number): number {\n\tconst newHour = hour + forHours;\n\n\tif (newHour === 24) {\n\t\treturn 0;\n\t}\n\n\tif (newHour > 24) {\n\t\treturn newHour - 24;\n\t}\n\n\treturn newHour;\n}\n\nexport function hourToString(hour: number) {\n\tif (hour < 10) {\n\t\treturn `0${hour}`;\n\t}\n\n\treturn `${hour}`;\n}\n\nexport function fillList(list: string[], length: number): string[] {\n\tconst newList = [...list];\n\tconst listLenght = newList.length + 1;\n\n\tif (listLenght >= length) {\n\t\treturn newList;\n\t}\n\n\tconst missingInputs = length - listLenght;\n\tlet lastUpdate = 0;\n\n\tfor (let i = 0; i < missingInputs; i++) {\n\t\tif (lastUpdate === 0) {\n\t\t\tnewList.push('');\n\t\t\tlastUpdate = 1;\n\t\t} else {\n\t\t\tnewList.unshift('');\n\t\t\tlastUpdate = 0;\n\t\t}\n\t}\n\n\treturn newList;\n}\n\nexport function generateScheduleGrid(startHour: number, employees: string[]): ScheduleGrid {\n\tconst shiftStartTime = startHour;\n\tconst employePerShift = 2;\n\tconst shiftsPerHour = 2;\n\tconst workHours = 8;\n\tconst listLength = workHours * shiftsPerHour * employePerShift;\n\tconst employeeList = fillList(shuffleArrayTimes(employees, 4), listLength);\n\n\treturn Array.from(Array(workHours).keys()).map((d, i) => {\n\t\tconst hour = incrementHour(shiftStartTime, i);\n\t\treturn Array.from(Array(employePerShift).keys()).map((e: any, index: number) => {\n\t\t\tconst newEndTime = incrementHour(hour, 1);\n\t\t\tconst hourString = hourToString(hour);\n\t\t\tconst startTime = index === 0 ? `${hourString}:00` : `${hourString}:30`;\n\t\t\tconst endTime = index === 0 ? `${hourString}:30` : `${hourToString(newEndTime)}:00`;\n\n\t\t\tconst increment = index * employePerShift;\n\t\t\tconst baseIndex = i * employePerShift * shiftsPerHour + increment;\n\n\t\t\treturn {\n\t\t\t\tstartTime,\n\t\t\t\tendTime,\n\t\t\t\tnames: [employeeList[baseIndex], employeeList[baseIndex + 1]]\n\t\t\t};\n\t\t})\n\t});\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Paper } from \"@material-ui/core\";\nimport { InputSection } from './input-section/InputSection';\nimport { Schedule } from './schedule/Schedule';\nimport { generateScheduleGrid } from '../util/util';\nimport { ScheduleGrid } from './schedule/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tpadding: theme.spacing(1),\n\t\tbackground: theme.palette.grey.A700,\n\t},\n\theader: {\n\t\tdisplay: 'flex',\n\t\tflex: 1,\n\t\tbackground: theme.palette.background.default,\n\t\tcolor: theme.palette.grey.A400,\n\t\tpadding: theme.spacing(2),\n\t\tborderRadius: theme.spacing(1),\n\t\tflexDirection: 'column'\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(1)\n\t},\n\theadingText: {\n\t\tmargin: `${theme.spacing(0)}px 0 ${theme.spacing(.5)}px 0`,\n\t\tmarginLeft: 0\n\t},\n\theadingExplanation: {\n\t\tmargin: theme.spacing(0),\n\t},\n\tgridContainer: {\n\t\tpadding: theme.spacing(2),\n\t\tbackground: theme.palette.background.default,\n\t\tborderRadius: theme.spacing(1),\n\t\tmargin: `${theme.spacing(1)}px 0`,\n\t\twidth: 'auto'\n\t}\n}));\n\nfunction App() {\n\tconst classes = useStyles();\n\tconst [shiftStartHour, updateShiftStartHour] = useState<number>(8);\n\tconst [employees, updateEmployes] = useState<string[]>([]);\n\tconst [employeeShiftGrid, updateShiftGrid] = useState<ScheduleGrid>([]);\n\n\tconst addEmploye = (emp: string) => {\n\t\temployees.push(emp);\n\t\tupdateEmployes(employees);\n\t};\n\n\tconst generateGrid = () => {\n\t\tconst newGrid = generateScheduleGrid(shiftStartHour, employees);\n\t\tupdateShiftGrid(newGrid);\n\t};\n\n\tconst removeEmployee = (index: number) => {\n\t\tconst newEmployees = [...employees];\n\t\tnewEmployees.splice(index, 1);\n\t\tupdateEmployes(newEmployees);\n\t};\n\n\tconst clearList = () => {\n\t\tupdateEmployes([]);\n\t};\n\n\treturn (\n\t\t<Container className={classes.root}>\n\t\t\t<div className={classes.header}>\n\t\t\t\t<h1 className={classes.headingText}>Employee Break Sorter</h1>\n\t\t\t\t<p className={classes.headingExplanation}>Insert list of names of people and start time for a shift that lasts\n\t\t\t\t\t8h.</p>\n\t\t\t</div>\n\t\t\t<Grid justify=\"space-between\" container className={classes.gridContainer} spacing={1}>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t<InputSection\n\t\t\t\t\t\t\temployes={employees}\n\t\t\t\t\t\t\taddEmploye={addEmploye}\n\t\t\t\t\t\t\tgenerateGrid={generateGrid}\n\t\t\t\t\t\t\tclearList={clearList}\n\t\t\t\t\t\t\tshiftStartHour={shiftStartHour}\n\t\t\t\t\t\t\tupdateShiftStartHour={updateShiftStartHour}\n\t\t\t\t\t\t\tremoveEmployee={removeEmployee}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t<Schedule\n\t\t\t\t\t\t\temployeeShiftGrid={employeeShiftGrid}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: {'Service-Worker': 'script'},\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nconst isProduction = process.env.NODE_ENV === 'production';\nconsole.log('[Logger] Production env enabled: ', isProduction, process.env);\nReactGA.initialize('UA-47345139-1', { debug: !isProduction});\nReactGA.pageview(window.location.pathname + window.location.search);\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App/>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}